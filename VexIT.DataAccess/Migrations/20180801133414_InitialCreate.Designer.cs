// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VexIT.DataAccess.Db;

namespace VexIT.DataAccess.Migrations
{
    [DbContext(typeof(VexItContext))]
    [Migration("20180801133414_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VexIT.DataAccess.Model.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("CategoryId");

                    b.Property<string>("City")
                        .HasMaxLength(512);

                    b.Property<string>("Country")
                        .HasMaxLength(512);

                    b.Property<string>("Description")
                        .HasMaxLength(2048);

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Place")
                        .HasMaxLength(512);

                    b.Property<DateTime>("ScheduledAt");

                    b.Property<string>("Street")
                        .HasMaxLength(512);

                    b.Property<string>("YouTubeUrl")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VexIT.DataAccess.Model.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<Guid>("EventId");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("VexIT.DataAccess.Model.Photo", b =>
                {
                    b.HasOne("VexIT.DataAccess.Model.Event", "Event")
                        .WithOne("Photo")
                        .HasForeignKey("VexIT.DataAccess.Model.Photo", "EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
